# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          sudo apt update
          sudo apt install git openssh-client curl -y
          # Installing the Datree tool
          curl https://get.datree.io | /bin/bash
          # Configuring git
          git config --global user.name "givpeytz"
          git config --global user.email "giv@peytz.dk"
          # Implementing a github.com interaction , so we can interact with git@github.com, in order to download/clone the k8s repo
          #ssh-keygen -t rsa -N '' -f ~/.ssh/${SSH_KEY_NAME} <<< y
          ssh-keygen -b 2048 -t rsa -f ${SSH_KEY_NAME} -q -N ""
          #echo "${SSH_PRIVATE_KEY}" > ${SSH_KEY_NAME}
          #echo "${SSH_PUBLIC_KEY}" > ${SSH_KEY_NAME}.pub
          sudo chmod 400 ${SSH_KEY_NAME}
          #mv ${SSH_KEY_NAME}* ~/.ssh/
          eval `ssh-agent -s`
          ssh-add ~/.ssh/${SSH_KEY_NAME}
          ssh-add -l -E sha256
          ssh-keyscan -t rsa "github.com" >> ~/.ssh/known_hosts
          cat ~/.ssh/id_rsa.pub
          # Cloning the k8s repo
          git clone git@github.com:givpeytz/kubernetes-argocd.git
          cd kubernetes-manifests/kubernetes-argocd/
          # Implementing the Datree tool's scanner
          datree test argocd/*
          datree test cert-manager/*
          datree test dummy-app/*
